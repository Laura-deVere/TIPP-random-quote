{"version":3,"sources":["mains.js"],"names":["generator","htmlEls","quote","document","getElementById","author","reload","getData","fetch","proxyurl","data","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","console","log","status","randomNum","max","min","num","Math","round","random","displayQuote","textContent","text","addEventListener","name","quotes","forEach","indexOf","push","length","searchAuthor","randomQuote"],"mappings":";AAAA,MAAMA,EAAY,MACVC,MAAAA,EAAU,CACdC,MAAOC,SAASC,eAAe,SAC/BC,OAAQF,SAASC,eAAe,UAChCE,OAAQH,SAASC,eAAe,WAG5BG,EAAU,UAGPC,OAAAA,MAAMC,kEAAiBC,KAAO,GAAK,CACxCC,OAAQ,MACRC,QAAS,CACS,eAAA,mBAChBC,OAAQ,yCAEVC,KAAMC,KAAKC,UAAUN,QAEpBO,KAAMC,GACEA,EAASC,QAEjBC,MAAOC,IACNC,QAAQC,IAAIF,EAAMG,WAIlBC,EAAY,CAACC,EAAKC,KAGfC,OADGC,KAAKC,MAAMD,KAAKE,UAAYL,EAAMC,GAAOA,IAe/CK,EAAe,CAAC9B,EAAOQ,KAC3BT,EAAQC,MAAM+B,YAAc/B,EAAMgC,KAClCjC,EAAQI,OAAO4B,YAAc/B,EAAMG,OAASH,EAAMG,OAAS,UAC3DJ,EAAQI,OAAO8B,iBAAiB,QAAS,IAdtB,EAACC,EAAM1B,KAEtB2B,IAAAA,EAAS,GAMNL,OALPtB,EAAK4B,QAASpC,IACS,OAAjBA,EAAMG,SAAmD,IAAhCH,EAAMG,OAAOkC,QAAQH,IAChDC,EAAOG,KAAKtC,KAGT8B,EAAaK,EAAOZ,EAAUY,EAAOI,OAAS,EAAG,IAAKJ,IAO3DK,CAAaxC,EAAMG,OAAQK,KAIzBiC,EAAc,UACZjC,MAAAA,QAAaH,IACfmB,IAAAA,EAAMhB,EAAK+B,OACXV,EAASrB,EAAKe,EAAUC,EAAK,IACjCM,EAAaD,EAAQrB,IAGvBT,EAAQK,OAAO6B,iBAAiB,QAASQ,GACzCA,KA3DgB","file":"mains.74d01b01.js","sourceRoot":"../src","sourcesContent":["const generator = (() => {\n  const htmlEls = {\n    quote: document.getElementById(\"quote\"),\n    author: document.getElementById(\"author\"),\n    reload: document.getElementById(\"reload\"),\n  };\n\n  const getData = async () => {\n    const url = `https://type.fit/api/quotes`;\n    const proxyurl = `https://cors-anywhere.herokuapp.com/`;\n    return fetch(proxyurl + url, (data = {}), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application / json, text / plain, */*\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .catch((error) => {\n        console.log(error.status);\n      });\n  };\n\n  const randomNum = (max, min) => {\n    // Math.random returns a floating point between 0 & 1\n    let num = Math.round(Math.random() * (max - min) + min);\n    return num;\n  };\n\n  const searchAuthor = (name, data) => {\n    // let regex = new RegExp(name, \"i\");\n    let quotes = [];\n    data.forEach((quote) => {\n      if (quote.author !== null && quote.author.indexOf(name) !== -1) {\n        quotes.push(quote);\n      }\n    });\n    return displayQuote(quotes[randomNum(quotes.length - 1, 0)], quotes);\n  };\n\n  const displayQuote = (quote, data) => {\n    htmlEls.quote.textContent = quote.text;\n    htmlEls.author.textContent = quote.author ? quote.author : \"Unknown\";\n    htmlEls.author.addEventListener(\"click\", () =>\n      searchAuthor(quote.author, data)\n    );\n  };\n\n  const randomQuote = async () => {\n    const data = await getData();\n    let max = data.length;\n    let random = data[randomNum(max, 0)];\n    displayQuote(random, data);\n  };\n\n  htmlEls.reload.addEventListener(\"click\", randomQuote);\n  randomQuote();\n})();\n"]}